{"version":3,"file":"hmctsroles-lib.js.map","sources":["ng://hmctsroles-lib/lib/hmctsroles-lib.service.ts","ng://hmctsroles-lib/lib/hmctsroles-lib.component.ts","ng://hmctsroles-lib/lib/directives/roles.directive.ts","ng://hmctsroles-lib/lib/directives/unless-role-includes.directive.ts","ng://hmctsroles-lib/lib/hmctsroles-lib.module.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HmctsrolesLibService {\r\n\r\n  constructor(\r\n    private cookieService: CookieService) { }\r\n\r\n\r\n\r\n  // public getUserRoles(): string[] {\r\n  //   let roles = ['roleA', 'roleB', 'roleC']\r\n  //   return roles\r\n  // }\r\n\r\n\r\n  public getUserRoles(): string[] {\r\n    let roles = [];\r\n    let ck = this.cookieService.get('__roles__');\r\n    if (ck != null) roles = ck.split(',');\r\n    //console.log('@@COOKIE:', roles)\r\n    return roles\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hmcts-hmctsroles-lib',\n  template: `\n    <p>\n      hmctsroles-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class HmctsrolesLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {\r\n  Directive, ViewContainerRef, TemplateRef, Input, OnInit\r\n} from \"@angular/core\";\r\nimport { HmctsrolesLibService } from \"../hmctsroles-lib.service\";\r\n\r\n\r\n\r\n\r\n@Directive({\r\n  selector: \"[roleAccess]\"\r\n})\r\nexport class RolesDirective implements OnInit {\r\n  // @Input() roleAccess: string;\r\n  // @Input() roleAccessroleList: string;\r\n\r\n  private _roleAccess: string;\r\n  @Input()\r\n  set roleAccess(value: string) {\r\n    this._roleAccess = value;\r\n    console.log('roleAccess: ', value);\r\n  }\r\n\r\n\r\n  private _roleList: string[];\r\n  @Input()\r\n  set roleAccessRoleList(value: string[]) {\r\n    this._roleList = value;\r\n    console.log('roleList: ', value);\r\n  }\r\n\r\n\r\n\r\n  private _roleSource: string;\r\n  @Input()\r\n  set roleAccessRoleSource(value: string) {\r\n    this._roleSource = value;\r\n    console.log('roleSource: ', value);\r\n  }\r\n\r\n\r\n  isVisible = false;\r\n  roles: any[];\r\n\r\n  constructor(\r\n    private viewContainerRef: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private auth: HmctsrolesLibService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    let authorised\r\n\r\n    if (this._roleSource == 'cookie')\r\n      this.roles = this.auth.getUserRoles()\r\n    else\r\n      this.roles = this._roleList;\r\n\r\n\r\n    authorised = this.checkRoleisValid()\r\n\r\n    if (authorised)\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef)\r\n\r\n    else\r\n      this.viewContainerRef.clear()\r\n\r\n  }\r\n\r\n\r\n  checkRoleisValid() {\r\n    return this.roles.some(r => this._roleAccess.includes(r))\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit, Input, ViewContainerRef, TemplateRef } from '@angular/core';\r\nimport { HmctsrolesLibService } from '../hmctsroles-lib.service';\r\n\r\n\r\n@Directive({\r\n  selector: \"[unlessRole]\"\r\n})\r\nexport class UnlessRoleIncludesDirective implements OnInit {\r\n\r\n  @Input() unlessRole: string;\r\n  @Input() roleList: string;\r\n  @Input() roleSource: string;\r\n  roles: any;\r\n\r\n  constructor(\r\n    private elr: ElementRef,\r\n    private auth: HmctsrolesLibService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    let authorised\r\n    this.roles = this.roleList.split(',')\r\n\r\n    authorised = this.checkRoleisValid()\r\n    //console.log('auth', authorised)\r\n    if (authorised)\r\n      this.elr.nativeElement.style.visibility = 'hidden'\r\n\r\n    else\r\n      this.elr.nativeElement.style.visibility = 'visible'\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  checkRoleisValid() {\r\n    return this.roles.some(r => this.unlessRole.split(',').includes(r))\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { HmctsrolesLibComponent } from './hmctsroles-lib.component';\nimport { RolesDirective } from './directives/roles.directive';\nimport { UnlessRoleIncludesDirective } from './directives/unless-role-includes.directive';\nimport { CookieModule } from 'ngx-cookie';\n\n@NgModule({\n  imports: [\n    CookieModule.forRoot()\n  ],\n  declarations: [HmctsrolesLibComponent, RolesDirective, UnlessRoleIncludesDirective],\n  exports: [HmctsrolesLibComponent, RolesDirective, UnlessRoleIncludesDirective]\n})\nexport class HmctsrolesLibModule { }\n"],"names":[],"mappings":"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"}
