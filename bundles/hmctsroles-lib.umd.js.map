{"version":3,"file":"hmctsroles-lib.umd.js.map","sources":["ng://hmctsroles-lib/lib/hmctsroles-lib.service.ts","ng://hmctsroles-lib/lib/hmctsroles-lib.component.ts","ng://hmctsroles-lib/lib/directives/roles.directive.ts","ng://hmctsroles-lib/lib/directives/unless-role-includes.directive.ts","ng://hmctsroles-lib/lib/hmctsroles-lib.module.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HmctsrolesLibService {\r\n\r\n  constructor(\r\n    private cookieService: CookieService) { }\r\n\r\n\r\n\r\n  // public getUserRoles(): string[] {\r\n  //   let roles = ['roleA', 'roleB', 'roleC']\r\n  //   return roles\r\n  // }\r\n\r\n\r\n  public getUserRoles(): string[] {\r\n    let roles = [];\r\n    let ck = this.cookieService.get('__roles__');\r\n    if (ck != null) roles = ck.split(',');\r\n    console.log('@@COOKIE:', roles)\r\n    return roles\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'hmcts-hmctsroles-lib',\r\n  template: `\r\n    <p>\r\n      hmctsroles-lib works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class HmctsrolesLibComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive, ViewContainerRef, TemplateRef, Input, OnInit\r\n} from \"@angular/core\";\r\nimport { HmctsrolesLibService } from \"../hmctsroles-lib.service\";\r\n\r\n\r\n\r\n\r\n@Directive({\r\n  selector: \"[roleAccess]\"\r\n})\r\nexport class RolesDirective implements OnInit {\r\n  // @Input() roleAccess: string;\r\n  // @Input() roleAccessroleList: string;\r\n\r\n  private _roleAccess: string;\r\n  @Input()\r\n  set roleAccess(value: string) {\r\n    this._roleAccess = value;\r\n    console.log('roleAccess: ', value);\r\n  }\r\n\r\n\r\n  private _roleList: string[];\r\n  @Input()\r\n  set roleAccessRoleList(value: string[]) {\r\n    this._roleList = value;\r\n    console.log('roleList: ', value);\r\n  }\r\n\r\n\r\n\r\n  private _roleSource: string;\r\n  @Input()\r\n  set roleAccessRoleSource(value: string) {\r\n    this._roleSource = value;\r\n    console.log('roleSource: ', value);\r\n  }\r\n\r\n\r\n  isVisible = false;\r\n  roles: any[];\r\n\r\n  constructor(\r\n    private viewContainerRef: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private auth: HmctsrolesLibService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    let authorised\r\n\r\n    if (this._roleSource == 'cookie')\r\n      this.roles = this.auth.getUserRoles()\r\n    else\r\n      this.roles = this._roleList;\r\n\r\n\r\n    authorised = this.checkRoleisValid()\r\n\r\n    if (authorised)\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef)\r\n\r\n    else\r\n      this.viewContainerRef.clear()\r\n\r\n  }\r\n\r\n\r\n  checkRoleisValid() {\r\n    return this.roles.some(r => this._roleAccess.includes(r))\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit, Input, ViewContainerRef, TemplateRef } from '@angular/core';\r\nimport { HmctsrolesLibService } from '../hmctsroles-lib.service';\r\n\r\n\r\n@Directive({\r\n  selector: \"[unlessRole]\"\r\n})\r\nexport class UnlessRoleIncludesDirective implements OnInit {\r\n\r\n  @Input() unlessRole: string;\r\n  @Input() roleList: string;\r\n  @Input() roleSource: string;\r\n  roles: any;\r\n\r\n  constructor(\r\n    private elr: ElementRef,\r\n    private auth: HmctsrolesLibService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    let authorised\r\n    this.roles = this.roleList.split(',')\r\n\r\n    authorised = this.checkRoleisValid()\r\n    console.log('auth', authorised)\r\n    if (authorised)\r\n      this.elr.nativeElement.style.visibility = 'hidden'\r\n\r\n    else\r\n      this.elr.nativeElement.style.visibility = 'visible'\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  checkRoleisValid() {\r\n    return this.roles.some(r => this.unlessRole.split(',').includes(r))\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HmctsrolesLibComponent } from './hmctsroles-lib.component';\r\nimport { RolesDirective } from './directives/roles.directive';\r\nimport { UnlessRoleIncludesDirective } from './directives/unless-role-includes.directive';\r\nimport { CookieModule } from 'ngx-cookie';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CookieModule.forRoot()\r\n  ],\r\n  declarations: [HmctsrolesLibComponent, RolesDirective, UnlessRoleIncludesDirective],\r\n  exports: [HmctsrolesLibComponent, RolesDirective, UnlessRoleIncludesDirective]\r\n})\r\nexport class HmctsrolesLibModule { }\r\n"],"names":["Injectable","CookieService","Component","Directive","ViewContainerRef","TemplateRef","Input","ElementRef","NgModule","CookieModule"],"mappings":"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"}
