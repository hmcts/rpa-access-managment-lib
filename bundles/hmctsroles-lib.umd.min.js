!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("ngx-cookie")):"function"==typeof define&&define.amd?define("hmctsroles-lib",["exports","@angular/core","ngx-cookie"],t):t(e["hmctsroles-lib"]={},e.ng.core,null)}(this,function(e,t,o){"use strict";var r=function(){function e(e){this.cookieService=e}return e.prototype.getUserRoles=function(){var e=[],t=this.cookieService.get("__roles__");return null!=t&&(e=t.split(",")),e},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:o.CookieService}]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e(t.inject(o.CookieService))},token:e,providedIn:"root"}),e}(),n=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:t.Component,args:[{selector:"hmcts-hmctsroles-lib",template:"\n    <p>\n      hmctsroles-lib works!\n    </p>\n  ",styles:[]}]}],e.ctorParameters=function(){return[]},e}(),i=function(){function e(e,t,o){this.viewContainerRef=e,this.templateRef=t,this.auth=o,this.isVisible=!1}return Object.defineProperty(e.prototype,"roleAccess",{set:function(e){this._roleAccess=e,console.log("roleAccess: ",e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"roleAccessRoleList",{set:function(e){this._roleList=e,console.log("roleList: ",e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"roleAccessRoleSource",{set:function(e){this._roleSource=e,console.log("roleSource: ",e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){"cookie"==this._roleSource?this.roles=this.auth.getUserRoles():this.roles=this._roleList,this.checkRoleisValid()?this.viewContainerRef.createEmbeddedView(this.templateRef):this.viewContainerRef.clear()},e.prototype.checkRoleisValid=function(){var t=this;return this.roles.some(function(e){return t._roleAccess.includes(e)})},e.decorators=[{type:t.Directive,args:[{selector:"[roleAccess]"}]}],e.ctorParameters=function(){return[{type:t.ViewContainerRef},{type:t.TemplateRef},{type:r}]},e.propDecorators={roleAccess:[{type:t.Input}],roleAccessRoleList:[{type:t.Input}],roleAccessRoleSource:[{type:t.Input}]},e}(),s=function(){function e(e,t){this.elr=e,this.auth=t}return e.prototype.ngOnInit=function(){var e;this.roles=this.roleList.split(","),e=this.checkRoleisValid(),this.elr.nativeElement.style.visibility=e?"hidden":"visible"},e.prototype.checkRoleisValid=function(){var t=this;return this.roles.some(function(e){return t.unlessRole.split(",").includes(e)})},e.decorators=[{type:t.Directive,args:[{selector:"[unlessRole]"}]}],e.ctorParameters=function(){return[{type:t.ElementRef},{type:r}]},e.propDecorators={unlessRole:[{type:t.Input}],roleList:[{type:t.Input}],roleSource:[{type:t.Input}]},e}(),c=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[o.CookieModule.forRoot()],declarations:[n,i,s],exports:[n,i,s]}]}],e}();e.HmctsrolesLibService=r,e.HmctsrolesLibComponent=n,e.HmctsrolesLibModule=c,e.ɵa=i,e.ɵb=s,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=hmctsroles-lib.umd.min.js.map